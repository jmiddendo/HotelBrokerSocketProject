/*
 * Copyright (C) 2017 Jeffrey Middendorf
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package clientfrontend;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.text.ParseException;
/**
 *  This is the form that creates a booking in the system.
 * 
 * @author Jeffrey Miidendorf
 * @version 1.0
 * @since 17-Apr-2017
 */
public class BookingView extends View {

    private ClientConnection thisSocket;
    
    /**
     * Creates new form TestFrame
     */
    public BookingView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnCity = new javax.swing.JButton();
        btnHotels = new javax.swing.JButton();
        btnRates = new javax.swing.JButton();
        cboCity = new javax.swing.JComboBox<>();
        cboHotels = new javax.swing.JComboBox<>();
        cboRates = new javax.swing.JComboBox<>();
        btnExit = new javax.swing.JButton();
        txtFromDate = new javax.swing.JTextField();
        lblNumberOfDays = new javax.swing.JLabel();
        lblFromDate = new javax.swing.JLabel();
        btnCheckAvail = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        lblRoomNumber = new javax.swing.JLabel();
        cboRooms = new javax.swing.JComboBox<>();
        lblCustName = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        lblCustomerName = new javax.swing.JLabel();
        txtCreditCard = new javax.swing.JTextField();
        lblCreditCard = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        cboNumberOfDays = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(460, 600));

        btnCity.setText("Get City");
        btnCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityActionPerformed(evt);
            }
        });

        btnHotels.setText("Get Hotels");
        btnHotels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHotelsActionPerformed(evt);
            }
        });

        btnRates.setText("Get Rates");
        btnRates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRatesActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        txtFromDate.setToolTipText("yyyy-mm-dd");

        lblNumberOfDays.setText("Number Of Days:");

        lblFromDate.setText("From:");

        btnCheckAvail.setText("Check");
        btnCheckAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckAvailActionPerformed(evt);
            }
        });

        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Create Booking");
        lblHeader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblRoomNumber.setText("Choose Room:");

        lblCustName.setText("Customer Name");

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Payment Details");
        lblTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblCreditCard.setText("Credit Card:");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        cboNumberOfDays.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCustomerName)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(9, 9, 9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblFromDate)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblNumberOfDays)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cboNumberOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCheckAvail))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnRates, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboRates, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(152, 152, 152)
                                            .addComponent(cboCity, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(btnCity, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnHotels)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboHotels, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(26, 26, 26))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRoomNumber)
                                    .addComponent(lblCustName, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(lblCreditCard)
                                .addComponent(btnSubmit))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(btnExit))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCustomerName, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(txtCreditCard))))))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCity)
                    .addComponent(cboCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHotels)
                    .addComponent(cboHotels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRates)
                    .addComponent(cboRates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumberOfDays)
                    .addComponent(lblFromDate)
                    .addComponent(btnCheckAvail)
                    .addComponent(cboNumberOfDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRoomNumber)
                    .addComponent(cboRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCustName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCustomerName)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCreditCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCreditCard)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnExit))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method is the OnClick event for the GetCity button.
     * 
     * @param evt This is the event that was initiated.
     */
    private void btnCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityActionPerformed

        ArrayList<String> cityListing = new ArrayList<>();
        cboCity.removeAllItems();
        
        try{
            cityListing.addAll(getController().getCities());
            
            if (cityListing.isEmpty()){
                getController().showPopup("There are no cities at this time.  Please try again later.");
                return;
            }
            
            for (String city : cityListing){
                if(city.trim().length() != 0){
                    this.cboCity.addItem(city);
                }
            }
        }
        catch (NoSuchMethodError nsme){
            nsme.printStackTrace();
        }
        
    }//GEN-LAST:event_btnCityActionPerformed

    /**
     * This method is the OnClick event for the GetHotel button.
     * 
     * @param evt This is the event that was initiated.
     */
    private void btnHotelsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHotelsActionPerformed
        // TODO add your handling code here:
        
        if (this.cboCity.getItemCount() == 0){
            getController().showPopup("Please get the seleted cities first!");
            return;
        }
        
        ArrayList<String> hotelListing = new ArrayList<>();
        cboHotels.removeAllItems();
        
        try{
            hotelListing.addAll(getController().getHotels(cboCity.getSelectedItem().toString()));
            
            if (hotelListing.isEmpty()){
                getController().showPopup("There are no hotels at this time.  Please try again!");
                return;
            }
            
            for (String hotel : hotelListing){
                if(hotel.trim().length() != 0){
                    this.cboHotels.addItem(hotel);
                }
            }
        }
        catch (NoSuchMethodError nsme){
            nsme.printStackTrace();
        }
    }//GEN-LAST:event_btnHotelsActionPerformed

    /**
     * This method is the OnClick event for the GetRates button.
     * 
     * @param evt This is the event that was initiated.
     */
    private void btnRatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRatesActionPerformed
        // TODO add your handling code here:
        
        if (this.cboHotels.getItemCount() == 0){
            getController().showPopup("Please get a list of Hotels first!");
            return;
        }
        
        ArrayList<String> ratesListing = new ArrayList<>();
        cboRates.removeAllItems();
        
        try{
            ratesListing.addAll(getController().getRates(cboHotels.getSelectedItem().toString()));
            
            if (ratesListing.isEmpty()){
                getController().showPopup("There are not rates for that hotel.  Please try again!");
                return;
            }
            
            for (String rate : ratesListing){
                if(rate.trim().length() != 0){
                    this.cboRates.addItem(rate);
                }
            }
        }
        catch (NoSuchMethodError nsme){
            nsme.printStackTrace();
        }
    }//GEN-LAST:event_btnRatesActionPerformed

    /**
     * This method is the OnClick method for the Exit button.
     * 
     * @param evt This is the event that was initiated.
     */
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * This method is the OnClick event for the Check button.
     * 
     * @param evt This is the event that was initiated.
     */
    private void btnCheckAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckAvailActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-mm-dd");
        Date startDate, endDate;
        ArrayList<String> availRooms = new ArrayList<>();
        
        if (txtFromDate.getText().trim().length() == 0){
            getController().showPopup("From date is a required field!  Please try again!");
            txtFromDate.requestFocus();
            return;
        }
        
        if (this.cboRates.getItemCount() == 0){
            getController().showPopup("Please get a list of rates first!");
            return;
        }
        
        try{
            startDate = dt.parse(txtFromDate.getText().trim());
        }
        catch(ParseException e){
            getController().showPopup("Please enter a valid start date!");
            txtFromDate.setText("");
            txtFromDate.requestFocus();
            return;
        }
        
        availRooms.addAll(getController().getAvailableRooms(this.cboHotels.getSelectedItem().toString(), this.cboRates.getSelectedItem().toString(), txtFromDate.getText().trim(), this.cboNumberOfDays.getSelectedItem().toString()));
        cboRooms.removeAllItems();
        
        if (availRooms.isEmpty()){
            getController().showPopup("There are no rooms that match there criteria!  Please try again!");
            return;
        }
        
        for ( String room : availRooms){
            try{
                Integer.parseInt(room);
                cboRooms.addItem(room);
            }
            catch(Exception e){
                System.out.println(room);
            }
        }
    }//GEN-LAST:event_btnCheckAvailActionPerformed

    /**
     * This method is the OnClick event for the submit button.
     * 
     * @param evt This is the event that was initiated.
     */
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:

        if (this.cboRooms.getItemCount() == 0){
            getController().showPopup("Please get a list of rooms first");
            return;
        }
        
        String message = "";
        ArrayList<String> referenceNumber = new ArrayList<>();
        
        if (txtCustomerName.getText().trim().length() == 0){
            getController().showPopup("Customer name is a required field! Please update and try again.");
            txtCustomerName.requestFocus();
            return;
        }
        
        if (txtCreditCard.getText().trim().length() == 0){
            getController().showPopup("Credit card is a required field! Please update and try again.");
            txtCreditCard.requestFocus();
            return;
        }
        
        if (txtCreditCard.getText().trim().length() != 16){
            getController().showPopup("Credit card number is invalid! Please update and try again.");
            txtCreditCard.requestFocus();
            return;
        }
        
        message = this.cboRooms.getSelectedItem().toString().trim() + "#" + this.cboHotels.getSelectedItem().toString().trim() + "#" + this.txtCustomerName.getText().trim() + "#";
        message += this.txtFromDate.getText().trim() + "#" + this.cboNumberOfDays.getSelectedItem().toString() + "#" + this.txtCreditCard.getText().trim() + "#" + this.cboRates.getSelectedItem().toString();
                
        System.out.println(message);
        
        referenceNumber.addAll(getController().postBooking(message));
        
        if (!referenceNumber.isEmpty()){
            getController().showPopup("Congratulations! You have been successfully booked.\n Your reference id: " + referenceNumber.get(0));
        }
        else {
            getController().showPopup("The room is no longer available!  Please try again!");
            btnCheckAvailActionPerformed(null);
        }
            
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckAvail;
    private javax.swing.JButton btnCity;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnHotels;
    private javax.swing.JButton btnRates;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cboCity;
    private javax.swing.JComboBox<String> cboHotels;
    private javax.swing.JComboBox<String> cboNumberOfDays;
    private javax.swing.JComboBox<String> cboRates;
    private javax.swing.JComboBox<String> cboRooms;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCreditCard;
    private javax.swing.JLabel lblCustName;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblFromDate;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblNumberOfDays;
    private javax.swing.JLabel lblRoomNumber;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtCreditCard;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtFromDate;
    // End of variables declaration//GEN-END:variables
}
